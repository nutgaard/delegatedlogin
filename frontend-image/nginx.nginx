charset utf-8;
access_log   off; # Handled by trafic
error_log    /dev/stdout  info;

lua_package_path '~/lua/?.lua;;';
lua_shared_dict discovery 1m;
lua_shared_dict introspection 1m;
lua_shared_dict jwks 1m;
lua_code_cache on; # Need to be set for session storage to work.
lua_use_default_type off;

absolute_redirect off;

resolver "${RESOLVER}" ipv6=off;
resolver_timeout 3s;

map $http_x_forwarded_proto $real_scheme {
    https   https;
    default $scheme;
}
map "${CSP_REPORT_ONLY}" $csp_report_directives {
    "true"    "${CSP_DIRECTIVES}";
    default   '';
}
map "${CSP_REPORT_ONLY}" $csp_enforce_directives {
    "true"    '';
    default   "${CSP_DIRECTIVES}";
}

server {
    server_name _;
    listen 8080;
    root "/tmp/app-source";

    # Setting some variables for use within lua-scripts
    set $app_name               "${APP_NAME}";
    set $app_version            "${APP_VERSION}";
    set $idp_discovery_url      "${IDP_DISCOVERY_URL}";
    set $idp_client_id          "${IDP_CLIENT_ID}";
    set $delegated_login_url    "${DELEGATED_LOGIN_URL}";
    set $auth_token_location    "${AUTH_TOKEN_RESOLVER}";

    # Setting variables needed in logformat (masking long digits)
    set_by_lua_file $request_masked mask_log.lua $request;
    set_by_lua_file $sent_http_location_masked mask_log.lua $sent_http_location;
    set_by_lua_file $http_referer_masked mask_log.lua $http_referer;

    # Default configuration for proxy-passes.
    proxy_buffering         off;
    proxy_cache             off;
    proxy_hide_header       Content-Security-Policy;
    proxy_hide_header       Set-Cookie;
    proxy_http_version      1.1;
    proxy_ignore_headers    Set-Cookie; # We don't want the backend to set cookies.
    proxy_intercept_errors  off;
    proxy_pass_header       Nav-Callid;
    proxy_set_header        Connection "";
    proxy_set_header        Referer $http_referer;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-NginX-Proxy true;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_ssl_verify        off;

    # Disable caching of resources
    add_header              Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    add_header              Last-Modified $date_gmt;
    add_header              X-Application-Id "${APP_NAME}:${APP_VERSION}";
    etag                    off;
    expires                 off;
    if_modified_since       off;

    # Adding security headers
    add_header              Content-Security-Policy-Report-Only $csp_report_directives;
    add_header              Content-Security-Policy $csp_enforce_directives;
    add_header              Referrer-Policy "${REFERRER_POLICY}";

    location = "/${APP_NAME}/internal/isAlive" {
        default_type text/plan;
        return 200 "Alive";
    }

    location = "/${APP_NAME}/internal/isReady" {
        default_type text/plan;
        return 200 "Ready";
    }

    location = "/${APP_NAME}/internal/selftest" {
        default_type text/plan;
        return 200 "Application: ${APP_NAME}\nVersion: ${APP_VERSION}";
    }


    # Static files are served directly with authenticating.
    # Html is not included in list, since we want to autenticate user before loading the page
    location ~* ^/${APP_NAME}(/.+\.css|js|jpe?g|gif|ico|png|xml|otf|ttf|eot|woff|svg|map|json)$ {
        alias "/tmp/app-source/";
        access_by_lua_file oidc_protected.lua;
        try_files $1 =404;
    }
    location = / {
        return 301 "${APP_NAME}/";
    }
    location "/${APP_NAME}" {
        return 301 "${APP_NAME}/";
    }
    location "/${APP_NAME}/" {
        alias "/tmp/app-source/";
        index index.html;
        access_by_lua_file oidc_protected.lua;
        try_files $uri $uri/ /index.html;
    }
    include /tmp/nginx-source/*.nginx;
}
